벡터에서 원소값 확인하기
- index =  R에서 벡터에 저장된 각각의 값들을 구별하기 위하여 앞쪽의 값부터 순서를 부여하는 것.

함수의 개념
- array(데이터 벡터, 차원의 정의)

- a <- 10

a : 변수명
<- : 변수에 값을 저장하는 연산자
10 : 변수에 저장할 값


변수에 대해 알아야 할것!
- 변수의 값은 바뀔 수 있다.

- 하나의 변수에는 하나의 값만 저장

- 변수와 변수의 연산은 변수에 저장된 값들의 연산으로 바뀌어 실행


작명 규칙
- 첫 글자는 영문자나 마침표로 시작하는데, 일반적으로 영문자로 시작

- 두번째 글자부터는 영문자, 숫자, 마침표, 언더바를 사용 가능 ( '특수문자를 사용하면 변수명 사용불가)

- 변수명에서 대문자와 소문자는 별개의 문자 취급.

- 변수명 중간에 빈 칸을 넣을 수 없다.


자료형 : 변수에 저장할 수 있는 값의 종류 
- 숫자형 : 정수,실수 모두 가능  , 자연수를 포함하여 양의 정수, 음의 정수,0 등의 값으로 산술연산 가능

- 문자형 : 작은 따옴표나 큰따옴표로 묶어서 표현 , 산술 연산을 할수 없다.

- 모양은 숫자라도 따옴표로 묶으면 문자로 간주되어 산술연산에 사용할 수 없다.

- 논리형 : T , F로 줄여서 사용하는 것도 가능 ('TRUE,FALSE') , 비교 연산의 결과값으로 주어진다.

- 특수값 :  -> NULL : 정의되어 있지 않음을 의미, 자료형도 없고 길이도 0
               -> NA : '결측값' , '누락된 값'
               -> 초깃값 : 변수 생성 시 최초로 넣는 값

- 벡터 : 여러 개의 값을 한꺼번에 저장하는 기능 , 일반적인 프로그래밍 용어로는 1차원 배열(array)라고 한다.

- 벡터의 목적 : 여러 개의 값들을 하나의 묶음으로 처리하기 위한 것

벡터에서 원소값 확인하기
- 인덱스 : 벡터에 저장된 각각의 값들을 구별하기 위하여 앞쪽의 값부터 순서를 부여하는 것.
   -> 'd[1] , d[2], d[3] ,d[4] , d[5]' , 순차적으로 순서를 부여

-  여러 개의 값을 한번에 추출

-  이름으로 값을 추출


적금 만기 금액 계산하기
-> 벡터로 만들기!
- customer <- c('kim' , 'lee' , 'pack' , 'choi' , 'seo')
- deposit <- c(5000000,4500000,4000000,5500000,6000000)
- rate <- c(3.5,3,4,5,4.5)
- period <-c(2,2,,5,7,4)

-> 벡터 이름에 각 사람의 이름을 설정
- names(deposit) <- customer
- names(rate) <- customer
- names(period) <- customer

-> 지정할 수 있는 변수 who를 만든다
- who <- 'kim'

-> 만기 금액을 계산하는 식
- sum <- deposit[who] * ( 1 + rate[who] / 100)^period[who]
- sum


벡터에 저장된 원소값 변경
- v1 <- c(1,5,7,8,9)
- v1
     = 1 5 7 8 9

- v1[2] <- 3        # v1의 두 번째 값을 3으로 변경
- v1
      = 1 3 7 8 9

- v1[c(1,5)] <- c(10,20)  # v1의 1,5번째 값을 각각 10,20으로 변경
- v1
       = 10 3 7 8 20

- v1 <- c(100,200,300)   # v1의 내용을 100,200,300으로 변경
        
	= 100 200 300  그대로 출력!


- d[1 : 3]    # 1,2,3번째 자료 출력!  

- d[-c(3:5)]   # 세 번째에서 다섯 번째 값은 제외!

- d[seq(1,5,2)]   # 홀수 번째 자료 출력! 


함수
- 입력값 x=1일 때 결과값은 f(1)=3
            x=2일 때 결과값은 f(2) =5가 된다.

- f = 함수

- x = 함수의 입력값(input)

- f(x) = x를 입력하고 함수를 실행한 결과값

- y = 함수를 실행한 결과값을 받는 변수

- 어떤 값 x를 입력받아 정해진 계산을 수행한 후 그 결과값 f(x)를 돌려주는 장치


함수의 매개변수
- 프로그래밍에서 함수의 입력값을 받는 변수 -> 매개변수'

- 함수의 정의에 맞추어 매개변수를 입력하면 정의된 결과값을 얻을 수 있다.

- sort(d)   # 벡터 d의 값들을 오름차순으로 정렬하여 출력!

- sort(d , decreasing=TRUE)   # 벡터 d의 값들을 내림차순으로 정렬하여 출력!

- 숫자뿐만 아니라 벡터도 함수의 입력값으로 넣을 수 있고, 결과값도 숫자가 아닌 벡터가 될 수 있다.

- sort() -> 매개변수를 하나 아니면 두 개를 입력하는 경우도 있다.


sort(x=d,decreasing=FALSE)
- sort <- 함수명

- x , decreasing <- 매개변수명

- d , FALSE <- 매개변수값


- 매개변수는 반드시 입력해야 하는 필수 매개변수 or  선택적 매개변수로 구분하는데 선택적 매개변수는 생략 가능

- 선택적 매개변수 = 사용자가 생략할 경우를 대비해서 미리 어떤 값을 지정해놓는다 <- '기본값'

- a <- 1:12

- b <- '월'

- c <- paste(a,b, sep=' ')

- c
                   = 1월 ~ 12월까지 나온다.

매출액이 가장 많은 달
- max.month <- sort(sales,decreasing=T)
- max.month[1]



